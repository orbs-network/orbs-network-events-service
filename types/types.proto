syntax = "proto3";
package types;
option go_package = "github.com/orbs-network/orbs-network-events-service/types";

enum ExecutionResult {
    EXECUTION_RESULT_RESERVED = 0;                                  // REQUEST_STATUS_RESERVED
    EXECUTION_RESULT_SUCCESS = 1;                                   // REQUEST_STATUS_COMPLETED
    EXECUTION_RESULT_ERROR_SMART_CONTRACT = 2;                      // REQUEST_STATUS_COMPLETED
    EXECUTION_RESULT_ERROR_INPUT = 3;                               // REQUEST_STATUS_BAD_REQUEST
    EXECUTION_RESULT_ERROR_CONTRACT_NOT_DEPLOYED = 4;               // REQUEST_STATUS_BAD_REQUEST
    EXECUTION_RESULT_ERROR_UNEXPECTED = 5;                          // REQUEST_STATUS_SYSTEM_ERROR
    EXECUTION_RESULT_NOT_EXECUTED = 6;
}

message IndexedEvent {
    string contract_name = 1;
    string event_name = 2;

    uint64 block_height = 3;
    uint64 timestamp = 4;

    bytes txhash = 5;
    ExecutionResult execution_result = 6;
    uint32 index = 7; // suggestion from Noam to preserve order

    bytes arguments = 8;
}

message IndexerRequest {
    uint32 protocol_version = 1;
    uint32 virtual_chain_id = 2;

    string contract_name = 5;
    repeated string event_name = 6;

    uint64 from_block = 7;
    uint64 to_block = 8;

    uint64 from_time = 9;
    uint64 to_time = 10;

    repeated bytes filters = 11;
}

message IndexerResponse {
    repeated IndexedEvent events = 1;
}

service Indexer {
    rpc GetEvents (IndexerRequest) returns (IndexerResponse);
}
